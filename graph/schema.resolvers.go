package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"testBanyaRu/database"
	"testBanyaRu/graph/model"
)

var db = database.Connect()

// CreateMain is the resolver for the createMain field.
func (r *mutationResolver) CreateMain(ctx context.Context, input model.MainInput) (*model.Main, error) {
	result, err := db.Create(ctx, input)
	return result, err
}

// UpdateMain is the resolver for the updateMain field.
func (r *mutationResolver) UpdateMain(ctx context.Context, id string, input model.MainInput) (*model.Main, error) {
	result, err := db.Update(ctx, id, input)
	return result, err
}

// DeleteMain is the resolver for the deleteMain field.
func (r *mutationResolver) DeleteMain(ctx context.Context, id string) (*model.MainDelete, error) {
	result, err := db.Delete(ctx, id)
	return result, err
}

// GetMain is the resolver for the getMain field.
func (r *queryResolver) GetMain(ctx context.Context, id string) (*model.Main, error) {
	result, err := db.Get(ctx, id)
	return result, err
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
